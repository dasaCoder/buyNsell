{"version":3,"sources":["webpack:///./src/app/tab1/posts.service.ts","webpack:///./src/app/tab1/tab1.module.ts","webpack:///./src/app/tab1/tab1.page.html","webpack:///./src/app/tab1/tab1.page.scss","webpack:///./src/app/tab1/tab1.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACyF;AACzF;AAgB3C;IAIE,qBAAoB,EAAoB;QAApB,OAAE,GAAF,EAAE,CAAkB;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,UAAU,CAAO,OAAO,CAAC,CAAC;QAEpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,IAAI,CACpD,0DAAG,CAAC,iBAAO;YACT,OAAO,OAAO,CAAC,GAAG,CAAC,WAAC;gBAClB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAClC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC5B,kBAAS,EAAE,QAAK,IAAI,EAAG;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAGD,8BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,KAAK,CAAC;IAClB,CAAC;IArBQ,WAAW;QAJvB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMsB,wEAAgB;OAJ7B,WAAW,CAsBvB;IAAD,kBAAC;CAAA;AAtBuB;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBqB;AACE;AACN;AACM;AACF;AACN;AAWvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAQ,EAAE,CAAC,CAAC;aAC3D;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;AChB3B,mjBAAmjB,cAAc,0LAA0L,cAAc,8BAA8B,oBAAoB,+E;;;;;;;;;;;ACA3zB,yCAAyC,qBAAqB,qBAAqB,EAAE,+CAA+C,2Z;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlF;AACG;AAEZ;AAMW;AAOpD;IAIE,kBACU,GAAoB,EACpB,MAAc,EACd,UAAuB;QAFvB,QAAG,GAAH,GAAG,CAAiB;QACpB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAa;IAE/B,CAAC;IAED,2BAAQ,GAAR;QACI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QACzD,CAAC;IACG,CAAC;IAIG,0BAAO,GAAb;;;;;4BACc,qBAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;;wBAAnC,GAAG,GAAG,SAA6B;wBACzC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;;;;;KACrC;IAtBU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,sFAA6B;;SAE9B,CAAC;yCAMe,kEAAe;YACZ,sDAAM;YACF,0DAAW;OAPtB,QAAQ,CAuBpB;IAAD,eAAC;CAAA;AAvBoB","file":"tab1-tab1-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument, DocumentReference } from '@angular/fire/firestore';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Post {\r\n    id?: string;\r\n    title: string;\r\n    description: string;\r\n    price: string;\r\n    model: string;\r\n  }\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\nexport class PostService {\r\n  private postsCollection: AngularFirestoreCollection<Post>;\r\n  private posts: Observable<Post[]>;\r\n\r\n  constructor(private db: AngularFirestore) { \r\n    this.postsCollection = db.collection<Post>('posts');\r\n\r\n    this.posts = this.postsCollection.snapshotChanges().pipe(\r\n        map(actions => {\r\n          return actions.map(a => {\r\n            const data = a.payload.doc.data();\r\n            const id = a.payload.doc.id;\r\n            return { id, ...data };\r\n          });\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  getPosts(): Observable<Post[]> {\r\n    return this.posts;\r\n    }\r\n}","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab1Page } from './tab1.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\r\n  ],\r\n  declarations: [Tab1Page]\r\n})\r\nexport class Tab1PageModule {}\r\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-title>\\r\\n            Main\\r\\n        </ion-title>\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"signOut()\\\"  item-right><ion-icon name=\\\"close\\\"></ion-icon> Sign Out</button>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n\\r\\n        <ion-card *ngFor=\\\"let item of (retrievedPosts | async)\\\">\\r\\n            <img src=\\\"assets/shapes.svg\\\">\\r\\n          <ion-item>\\r\\n            <ion-icon name=\\\"car\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label>{{ item.title }}</ion-label>\\r\\n            <ion-button fill=\\\"outline\\\" slot=\\\"end\\\">View</ion-button>\\r\\n          </ion-item>\\r\\n        \\r\\n          <ion-card-content>\\r\\n              <span>RS: {{ item.price }}</span> <br>\\r\\n            {{ item.description }}\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n</ion-content>\"","module.exports = \".welcome-card ion-img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMS9EOlxccHJvamVjdFxcSW9uaWMtNC1maXJlYmFzZS9zcmNcXGFwcFxcdGFiMVxcdGFiMS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBZ0I7RUFDaEIsaUJBQWdCLEVBQ2pCIiwiZmlsZSI6InNyYy9hcHAvdGFiMS90YWIxLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWxjb21lLWNhcmQgaW9uLWltZyB7XHJcbiAgbWF4LWhlaWdodDogMzV2aDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { auth } from 'firebase/app';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Post, PostService } from './posts.service';\r\n\r\n@Component({\r\n  selector: 'app-tab1',\r\n  templateUrl: 'tab1.page.html',\r\n  styleUrls: ['tab1.page.scss']\r\n})\r\nexport class Tab1Page  implements OnInit {\r\n\r\n  private retrievedPosts: Observable<Post[]>;\r\n\r\n  constructor(\r\n    private aut: AngularFireAuth,\r\n    private router: Router,\r\n    private postServie: PostService) { \r\n     \r\n    }\r\n\r\n    ngOnInit() {\r\n        this.retrievedPosts = this.postServie.getPosts();\r\n;\r\n    }\r\n\r\n\r\n\r\n  async signOut() {\r\n    const res = await this.aut.auth.signOut();\r\n    console.log(res);\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n}\r\n"],"sourceRoot":""}